// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Grpc/protos/hesap.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace RecycleCoin.Grpc {
  public static partial class HesapServis
  {
    static readonly string __ServiceName = "HesapServis";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RecycleCoin.Grpc.HesapIstek> __Marshaller_HesapIstek = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RecycleCoin.Grpc.HesapIstek.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RecycleCoin.Grpc.HesapDurum> __Marshaller_HesapDurum = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RecycleCoin.Grpc.HesapDurum.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RecycleCoin.Grpc.HesapIstek, global::RecycleCoin.Grpc.HesapDurum> __Method_Ekle = new grpc::Method<global::RecycleCoin.Grpc.HesapIstek, global::RecycleCoin.Grpc.HesapDurum>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Ekle",
        __Marshaller_HesapIstek,
        __Marshaller_HesapDurum);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RecycleCoin.Grpc.HesapIstek, global::RecycleCoin.Grpc.HesapDurum> __Method_Guncelle = new grpc::Method<global::RecycleCoin.Grpc.HesapIstek, global::RecycleCoin.Grpc.HesapDurum>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Guncelle",
        __Marshaller_HesapIstek,
        __Marshaller_HesapDurum);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RecycleCoin.Grpc.HesapIstek, global::RecycleCoin.Grpc.HesapDurum> __Method_GenelAnahtarIleGetir = new grpc::Method<global::RecycleCoin.Grpc.HesapIstek, global::RecycleCoin.Grpc.HesapDurum>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GenelAnahtarIleGetir",
        __Marshaller_HesapIstek,
        __Marshaller_HesapDurum);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RecycleCoin.Grpc.HesapIstek, global::RecycleCoin.Grpc.HesapDurum> __Method_AdresIleGetir = new grpc::Method<global::RecycleCoin.Grpc.HesapIstek, global::RecycleCoin.Grpc.HesapDurum>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AdresIleGetir",
        __Marshaller_HesapIstek,
        __Marshaller_HesapDurum);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::RecycleCoin.Grpc.HesapDurum> __Method_HepsiniGetir = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::RecycleCoin.Grpc.HesapDurum>(
        grpc::MethodType.Unary,
        __ServiceName,
        "HepsiniGetir",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_HesapDurum);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RecycleCoin.Grpc.HesapIstek, global::RecycleCoin.Grpc.HesapDurum> __Method_EnZenginNadetHesapGetir = new grpc::Method<global::RecycleCoin.Grpc.HesapIstek, global::RecycleCoin.Grpc.HesapDurum>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EnZenginNadetHesapGetir",
        __Marshaller_HesapIstek,
        __Marshaller_HesapDurum);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::RecycleCoin.Grpc.HesapReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for HesapServis</summary>
    public partial class HesapServisClient : grpc::ClientBase<HesapServisClient>
    {
      /// <summary>Creates a new client for HesapServis</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public HesapServisClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for HesapServis that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public HesapServisClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected HesapServisClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected HesapServisClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RecycleCoin.Grpc.HesapDurum Ekle(global::RecycleCoin.Grpc.HesapIstek request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Ekle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RecycleCoin.Grpc.HesapDurum Ekle(global::RecycleCoin.Grpc.HesapIstek request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Ekle, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RecycleCoin.Grpc.HesapDurum> EkleAsync(global::RecycleCoin.Grpc.HesapIstek request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EkleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RecycleCoin.Grpc.HesapDurum> EkleAsync(global::RecycleCoin.Grpc.HesapIstek request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Ekle, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RecycleCoin.Grpc.HesapDurum Guncelle(global::RecycleCoin.Grpc.HesapIstek request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Guncelle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RecycleCoin.Grpc.HesapDurum Guncelle(global::RecycleCoin.Grpc.HesapIstek request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Guncelle, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RecycleCoin.Grpc.HesapDurum> GuncelleAsync(global::RecycleCoin.Grpc.HesapIstek request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GuncelleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RecycleCoin.Grpc.HesapDurum> GuncelleAsync(global::RecycleCoin.Grpc.HesapIstek request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Guncelle, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RecycleCoin.Grpc.HesapDurum GenelAnahtarIleGetir(global::RecycleCoin.Grpc.HesapIstek request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenelAnahtarIleGetir(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RecycleCoin.Grpc.HesapDurum GenelAnahtarIleGetir(global::RecycleCoin.Grpc.HesapIstek request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GenelAnahtarIleGetir, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RecycleCoin.Grpc.HesapDurum> GenelAnahtarIleGetirAsync(global::RecycleCoin.Grpc.HesapIstek request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenelAnahtarIleGetirAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RecycleCoin.Grpc.HesapDurum> GenelAnahtarIleGetirAsync(global::RecycleCoin.Grpc.HesapIstek request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GenelAnahtarIleGetir, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RecycleCoin.Grpc.HesapDurum AdresIleGetir(global::RecycleCoin.Grpc.HesapIstek request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AdresIleGetir(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RecycleCoin.Grpc.HesapDurum AdresIleGetir(global::RecycleCoin.Grpc.HesapIstek request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AdresIleGetir, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RecycleCoin.Grpc.HesapDurum> AdresIleGetirAsync(global::RecycleCoin.Grpc.HesapIstek request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AdresIleGetirAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RecycleCoin.Grpc.HesapDurum> AdresIleGetirAsync(global::RecycleCoin.Grpc.HesapIstek request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AdresIleGetir, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RecycleCoin.Grpc.HesapDurum HepsiniGetir(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HepsiniGetir(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RecycleCoin.Grpc.HesapDurum HepsiniGetir(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_HepsiniGetir, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RecycleCoin.Grpc.HesapDurum> HepsiniGetirAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HepsiniGetirAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RecycleCoin.Grpc.HesapDurum> HepsiniGetirAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_HepsiniGetir, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RecycleCoin.Grpc.HesapDurum EnZenginNadetHesapGetir(global::RecycleCoin.Grpc.HesapIstek request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnZenginNadetHesapGetir(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RecycleCoin.Grpc.HesapDurum EnZenginNadetHesapGetir(global::RecycleCoin.Grpc.HesapIstek request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EnZenginNadetHesapGetir, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RecycleCoin.Grpc.HesapDurum> EnZenginNadetHesapGetirAsync(global::RecycleCoin.Grpc.HesapIstek request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnZenginNadetHesapGetirAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RecycleCoin.Grpc.HesapDurum> EnZenginNadetHesapGetirAsync(global::RecycleCoin.Grpc.HesapIstek request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EnZenginNadetHesapGetir, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override HesapServisClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new HesapServisClient(configuration);
      }
    }

  }
}
#endregion
